openapi: 3.0.0
info:
  title: Sample API
  description: サンプルのAPIです。
  version: 1.0.0

servers:
- url: https://development.gigantic-server.com/v1
  description: Development server
- url: https://staging.gigantic-server.com/v1
  description: Staging server
- url: https://api.gigantic-server.com/v1
  description: Production server

paths:
  /users:
    get:
      tags:
        - users
      summary: Get all users.
      description: Returns an array of User model
      parameters: []
      responses:
        '200':
          description: A JSON array of User model
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/User'
                example:
                  - id: 1
                    username: sample user
                    firstName: sample
                    lastName: user
                    email: sample@sample.jp
                    password: password
                    phone: 090-xxxx-xxxx
                  - id: 2
                    username: sample user
                    firstName: sample
                    lastName: user
                    email: sample@sample.jp
                    password: password
                    phone: 090-xxxx-xxxx
    post:
      tags: 
        - users
      summary: Create a new User
      description: Create a new User
      parameters: []
      requestBody:
        description: user to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              id: 3
              username: sample user
              firstName: sample
              lastName: user
              email: sample@sample.jp
              password: password
              phone: 090-xxxx-xxxx
      responses:
        '201':
          description: CREATED
  /users/{userId}:
    get:
      tags:
        - users
      summary: Get user by ID.
      description: Returns a single User model
      parameters: 
        - name: userId
          in: path
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single User model
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/User'
                example:
                  id: 1
                  username: Malfoy
                  firstName: Draco
                  lastName: Malfoy
                  email: sample@sample.jp
                  password: password
                  phone: 090-xxxx-xxxx
        '404':
          description: User Id Not found
        '500':
          description: Server error
                  
    delete:
      tags:
        - users
      summary: Delete user by ID.
      description: Returns result
      parameters: 
        - name: userId
          in: path
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
        '404':
          description: User Id Not found
        '500':
          description: Server error

components:
  schemas:
    User:
      type: object
      required:
        - id
        - username
        - password
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string

security: 
  - api_key: []
  
tags:
  - name: users
    description: Access to Users

externalDocs:
  description: "SampleAPIについて詳しく"
  url: "http://google.jp"